- name: Deploy on Openstack
  hosts: localhost
  gather_facts: false

  tasks:
  - name: Deploy an instance
    os_server:
         validate_certs: False
         state: present
         name: '{{vmName}}'
         image: f643e2b3-d4cd-4c49-b75e-ceef8014bf39
         key_name: cloudKeyKat
         network: ec55517d-fa5b-40b3-ba36-327565c9c025 
         timeout: 200
         flavor: 2
         wait: yes
         reuse_ips: False
    register: myserver

  - debug:
      msg: "System has ip {{ myserver.server.public_v4 }}"
  - add_host:
      name: myserver
      groups: myserver
      ansible_host: "{{ myserver.server.public_v4 }}"
      ansible_ssh_host: "{{myserver.server.public_v4}}"
      ansible_ssh_user: ubuntu
      ansible_ssh_private_key_file: /home/ubuntu/cloud.key.kat
      host_key_checking: False

  - name: Wait for SSH on the Instance
    command: >
      ssh -i cloud.key.kat -o "StrictHostKeyChecking no"
      ubuntu@{{ myserver.server.public_v4 }} 
    register: result
    until: result|success
    retries: 30
    delay: 10
 
- name: Configure new VM
  hosts: myserver
  become_user: root
  become: yes  

  tasks: 
  - name: Configure Instance
    apt: 
      name: git 
      state: latest
      force: yes
      update_cache: yes 
  - name: Install NFS-nfs-common
    apt: 
      name: nfs-common
      state: latest
      force: yes
  - name: Install NFS-rpcbind
    apt: 
      name: rpcbind
      state: latest
      force: yes
  - name: Update database connection
    shell: crudini --set /home/ubuntu/galaxy/config/galaxy.ini app:main database_connection postgresql://ubuntu@{{ webAddress }}/ubuntu
  - name: Mount database folder
    shell: mount {{ webInternalAddress }}:/home/ubuntu/galaxy/database /home/ubuntu/galaxy/database
  - name: Update galaxy.ini with server information Line 1
    shell: crudini --set /home/ubuntu/galaxy/config/galaxy.ini server:{{ handlerid }} use egg:Paste#http
  - name: Update galaxy.ini with server information Line 2
    shell: crudini --set /home/ubuntu/galaxy/config/galaxy.ini server:{{ handlerid }} port {{ port }}
  - name: Update galaxy.ini with server information Line 3
    shell: crudini --set /home/ubuntu/galaxy/config/galaxy.ini server:{{ handlerid }} host 0.0.0.0
  - name: Update galaxy.ini with server information Line 4
    shell: crudini --set /home/ubuntu/galaxy/config/galaxy.ini server:{{ handlerid }} use_threadpool true
  - name: Update galaxy.ini with server information Line 5
    shell: crudini --set /home/ubuntu/galaxy/config/galaxy.ini server:{{ handlerid }} threadpool_workers 5
  - name: Create virtualenv 
    shell: sh /home/ubuntu/galaxy/run.sh --daemon
  - name: Start the galaxy handler process
    shell: . /home/ubuntu/galaxy/.venv/bin/activate; cd /home/ubuntu/galaxy/; python /home/ubuntu/galaxy/scripts/paster.py serve config/galaxy.ini --server-name={{ handlerid }} --pid-file=/home/ubuntu/galaxy/{{ handlerid }}.pid --log-file=/home/ubuntu/galaxy/{{ handlerid }}.log --daemon

- name: Configure web server configuration for new handler
  hosts: localhost
  
  tasks:
  - name: Update galaxy.ini with server information Line 1
    shell: crudini --set /home/ubuntu/galaxy/config/galaxy.ini server:{{ handlerid }} use egg:Paste#http
  - name: Update galaxy.ini with server information Line 2
    shell: crudini --set /home/ubuntu/galaxy/config/galaxy.ini server:{{ handlerid }} port {{ port }}
  - name: Update galaxy.ini with server information Line 3
    shell: crudini --set /home/ubuntu/galaxy/config/galaxy.ini server:{{ handlerid }} host {{ myserver.server.public_v4 }}
  - name: Update galaxy.ini with server information Line 4
    shell: crudini --set /home/ubuntu/galaxy/config/galaxy.ini server:{{ handlerid }} use_threadpool true
  - name: Update galaxy.ini with server information Line 5
    shell: crudini --set /home/ubuntu/galaxy/config/galaxy.ini server:{{ handlerid }} threadpool_workers 5
  - name: Make temporary job handlers file
    shell: cp /home/ubuntu/galaxy/config/job_conf.xml /home/ubuntu/galaxy/config/job_conf.temp.xml
  - name: Insert handlers information
    shell: sh xmladder.sh {{ handlerid }} /home/ubuntu/galaxy/config/job_conf.temp.xml /home/ubuntu/galaxy/config/job_conf.xml
  - name: Restart web server
    shell: cd /home/ubuntu/galaxy/; python /home/ubuntu/galaxy/scripts/paster.py serve config/galaxy.ini --server-name=web0 --pid-file=/home/ubuntu/galaxy/web0.pid --log-file=/home/ubuntu/galaxy/web0.log --stop-daemon
  - name: Start web server
    shell: cd /home/ubuntu/galaxy/; python /home/ubuntu/galaxy/scripts/paster.py serve config/galaxy.ini --server-name=web0 --pid-file=/home/ubuntu/galaxy/web0.pid --log-file=/home/ubuntu/galaxy/web0.log --daemon


